package tp.data;


import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
	

public class TestPersonne {
	
	private static Logger logger = LoggerFactory.getLogger(TestPersonne.class);
	
	private Personne personne; //à tester
	
	@Before()
	public void init() {
		personne = new Personne(1L,"jean" , "Bon" , 67.2 /*cm*/ );
	}
	
	@Test
	public void test10cmDePlus() {
		personne.grandir(10);
		logger.trace("avec 10cm de plus, personne=" + personne);
		assertEquals(77.2, personne.getTaille(),0.5);
	}
	
	@Test
	public void test5cmDePlus() {
		personne.grandir(5);
		logger.trace("avec 5cm de plus, personne=" + personne);
		assertEquals(72.2, personne.getTaille(),0.5);
	}
	
	@Test
	public void testChangementDeNom() {
		String nomInitial = personne.getNom();//"Bon"
		personne.setNom("Aimare");//changement de nom
		String nouveauNom = personne.getNom();
		logger.trace("personne avec nouveau nom=" + personne);
		assertNotNull(nouveauNom); //vérifier nouveauNom pas null
		assertEquals("Aimare", nouveauNom);//vérifier nouveauNom valant "Aimare"
		assertNotEquals(nomInitial, nouveauNom);//vérifier nouveauNom différent de nomInitial
		assertTrue(personne.getTaille()>=0);//vérifier taille toujours positive
	}
	
	@After
    public void tearDown() {
		logger.trace("fin d'un test ...");
	}

}
